<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>no.usit</groupId>
	<artifactId>emrex-client</artifactId>
	<version>trunk-SNAPSHOT</version>
	<packaging>war</packaging>

	<name>EMREX Client</name>
	<description>Example EMREX Client</description>
 
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Timestamp format for the maven.build.timestamp property -->
		<!-- You can reference property in pom.xml or filtered resources (must 
			enable third-party plugin if using Maven < 2.1) -->
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<!-- Set the jboss.home property in an active profile of the $HOME/.m2/settings.xml 
			to specify the JBoss AS directory the "Maven way" -->
		<!-- By default, we assign it to the value of the JBOSS_HOME envrionment 
			variable -->
		<jboss.home>${env.JBOSS_HOME}</jboss.home>
		<jboss.domain>default</jboss.domain>
		<arquillian.version>1.0.0.Alpha4.SP1</arquillian.version>
		<jboss-javaee6-spec.version>3.0.1.Final</jboss-javaee6-spec.version>
		<hibernate.version>4.1.0.Final</hibernate.version>
		<seam.version>3.1.0.Final</seam.version>
		<version.org.jboss.jbossas>6.0.0.Final</version.org.jboss.jbossas>
		<version.junit>4.8.1</version.junit>
		<shrinkwrap.version>1.0.0-alpha-12</shrinkwrap.version>
		<org.richfaces.bom.version>4.2.1.Final</org.richfaces.bom.version>
		<jboss.domain>default</jboss.domain>
		<webdriver.client>htmlUnit</webdriver.client>
		<commons.version>2.4</commons.version>
	</properties>

	<!-- Legger opp distributionManagement slik at maven deploy vet hvor den 
		skal legge snapshot- og release-artifacts. Dette bør nok egentlig ligge i 
		en super-pom id her må peke til en servers.server.id i settings.xml-fila -->
	<distributionManagement>
		<!-- use the following if you're not using a snapshot version. -->
		<repository>
			<id>nexus-internal</id>
			<name>RepositoryProxy</name>
			<url>https://repo.usit.uio.no/nexus/content/repositories/internal-release/</url>
		</repository>
		<!-- use the following if you ARE using a snapshot version. -->
		<snapshotRepository>
			<id>nexus-internal</id>
			<name>RepositoryProxy</name>
			<url>https://repo.usit.uio.no/nexus/content/repositories/internal-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<!-- The JBoss Community public repository is a composite repository of 
			several major repositories -->
		<!-- see http://community.jboss.org/wiki/MavenGettingStarted-Users -->
		<!-- At the time of writing, Arquillian and the JBoss Java EE specification 
			POMs are only in the JBoss Community public repository (not Maven central) -->
		<repository>
			<id>atlassian</id>
			<name>Atlassian Repository</name>
			<url>https://maven.atlassian.com/content/groups/public</url>
			<!-- These optional flags are designed to speed up your builds by reducing 
				remote server calls -->
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>jboss-public-repository</id>
			<name>JBoss Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
			<!-- These optional flags are designed to speed up your builds by reducing 
				remote server calls -->
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</repository>
		<repository>
            <id>prime-repo</id>
            <name>PrimeFaces Maven Repository</name>
            <url>http://repository.primefaces.org</url>
            <layout>default</layout>
        </repository> 
        <repository>
            <id>Nuxeo</id>
            <name>Nuxeo Repository</name>
            <url>http://maven.nuxeo.org/nexus/content/groups/public</url>
            <!-- These optional flags are designed to speed up your builds by reducing 
                remote server calls -->
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </repository>
		<repository>
			<id>nexus-internal</id>
			<name>Usit Nexus Internal</name>
			<url>https://repo.usit.uio.no/nexus/content/groups/internal</url>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>usit-nexus-3rd-party</id>
			<name>Nexus Third Party Repository</name>
			<url>https://repo.usit.uio.no/nexus/content/repositories/thirdparty</url>
			<!-- These optional flags are designed to speed up your builds by reducing 
				remote server calls -->
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</repository>


		<repository>
			<id>maven</id>
			<name>Maven.org</name>
			<url>http://repo1.maven.org/maven2</url>
			<!-- These optional flags are designed to speed up your builds by reducing 
				remote server calls -->
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</repository>

	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>jboss-public-repository</id>
			<name>JBoss Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
			<!-- These optional flags are designed to speed up your builds by reducing 
				remote server calls -->
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<!-- Set to true to fix error in which Maven cannot find org.apache.maven.plugins:maven-archetype-plugin:maven-plugin:2.0-alpha-6-SNAPSHOT -->
				<updatePolicy>daily</updatePolicy>
			</snapshots>
		</pluginRepository>
        <pluginRepository>
            <id>Maven repo</id>
            <name>JBoss Repository</name>
            <url>http://repo1.maven.org/maven2</url>
            <!-- These optional flags are designed to speed up your builds by reducing 
                remote server calls -->
            <releases>
                <updatePolicy>never</updatePolicy>
            </releases>
            <snapshots>
                <!-- Set to true to fix error in which Maven cannot find org.apache.maven.plugins:maven-archetype-plugin:maven-plugin:2.0-alpha-6-SNAPSHOT -->
                <updatePolicy>daily</updatePolicy>
            </snapshots>
        </pluginRepository>
	</pluginRepositories>
	<dependencyManagement>
		<dependencies>

			<dependency>
				<groupId>org.jboss.seam</groupId>
				<artifactId>seam-bom</artifactId>
				<version>${seam.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.richfaces</groupId>
				<artifactId>richfaces-bom</artifactId>
				<version>${org.richfaces.bom.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>

			<!-- org.jboss.jbossas -->
			<dependency>
				<groupId>org.jboss.jbossas</groupId>
				<artifactId>jboss-as-depchain</artifactId>
				<version>${version.org.jboss.jbossas}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

                                                                                                        

		</dependencies>
	</dependencyManagement>

	<dependencies>


		<!-- Java EE 6 API dependency -->
		<!-- This one dependency imports all APIs available for a Java EE 6.0 application -->
		<dependency>
			<groupId>org.jboss.spec</groupId>
			<artifactId>jboss-javaee-6.0</artifactId>
			<version>${jboss-javaee6-spec.version}</version>
			<type>pom</type>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<version>6.0</version>
			<scope>provided</scope>
		</dependency>

	<dependency>
		<groupId>org.json</groupId>
		<artifactId>json</artifactId>
		<version>20230618</version>
	</dependency>


		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
			<version>1.0.0.Final</version>
			<scope>provided</scope>
			<!-- Excluded because it's provided by the Java EE 6 dependencies -->
			<exclusions>
				<exclusion>
					<groupId>org.hibernate.javax.persistence</groupId>
					<artifactId>hibernate-jpa-2.0-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- JSR-303 (Bean Validation) Implementation -->
		<!-- Provides portable constraints such as @Email -->
		<!-- Hibernate Validator is the only JSR-303 implementation at the moment, 
			so we can assume it's provided -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>4.0.0.GA</version>
			<scope>provided</scope>
		</dependency>



		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.8.5</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.2.8</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>3.1.1.RELEASE</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jboss.solder</groupId>
			<artifactId>solder-impl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.seam.faces</groupId>
			<artifactId>seam-faces-api</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.seam.faces</groupId>
			<artifactId>seam-faces</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.seam.international</groupId>
			<artifactId>seam-international</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.seam.persistence</groupId>
			<artifactId>seam-persistence</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.seam.security</groupId>
			<scope>compile</scope>
			<artifactId>seam-security</artifactId>
		</dependency>


		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate.version}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.transaction</groupId>
					<artifactId>jta</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.richfaces.ui</groupId>
			<artifactId>richfaces-components-ui</artifactId>
		</dependency>

		<dependency>
			<groupId>org.richfaces.core</groupId>
			<artifactId>richfaces-core-impl</artifactId>
		</dependency>

		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>1.7.1</version>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.0</version>
		</dependency>

		<dependency>
			<groupId>org.primefaces</groupId>
			<artifactId>primefaces</artifactId>
			<version>3.3.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.primefaces.extensions</groupId>
			<artifactId>primefaces-extensions</artifactId>
			<version>0.5.1</version>
		</dependency>
		
		<dependency>
			<groupId>org.primefaces.extensions</groupId>
			<artifactId>resources-ckeditor</artifactId>
			<version>0.5.1</version>
		</dependency>

		<dependency>
   			<groupId>com.lowagie</groupId>
   			<artifactId>itext</artifactId>
   			<version>2.1.7</version>
		</dependency>

                <dependency>
                        <groupId>commons-io</groupId>
                        <artifactId>commons-io</artifactId>
                        <version>${commons.version}</version>
                </dependency>

        <!-- Needed for running tests (you may also use TestNG) -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>2.31.0</version>
            <scope>test</scope>
        </dependency>


    
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>

		<plugins>
			<!-- Compiler plugin enforces Java 1.6 compatibility and controls execution 
				of annotation processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
					<compilerArgument>-proc:none</compilerArgument>
					<showDeprecation>false</showDeprecation>
					<showWarnings>true</showWarnings>
					<compilerVersion>1.6</compilerVersion>
					<fork>true</fork>
					<argLine>-Xmx512M</argLine>
				</configuration>
				<executions>
					<execution>
						<id>run-annotation-processors-only</id>
						<phase>generate-sources</phase>
						<configuration>
							<compilerArgument>-proc:only</compilerArgument>
							<!-- If your app has multiple packages, use this include filter to 
								execute the processor only on the package containing your entities -->
							<!-- <includes> <include>**/model/*.java</include> </includes> -->
						</configuration>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<archive>
						<manifestEntries>
							<Built-On>${maven.build.timestamp}</Built-On>
							<Dependencies>org.apache.santuario.xmlsec</Dependencies>
						</manifestEntries>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- Surefire -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.4.3</version>
				<configuration>
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
					<trimStackTrace>false</trimStackTrace>
					<printSummary>true</printSummary>
					<includes>
						<include>**/*UnitTest.java</include>
					</includes>
                    <excludes>
                        <exclude>**/*IntegrationTest.java</exclude>
                    </excludes>
				</configuration>
			</plugin>


			<!-- Build helper plugin adds the sources generated by the JPA 2 annotation 
				processor to the compile path -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/annotations</source>
							</sources>
						</configuration>
						<goals>
							<goal>add-source</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jboss-maven-plugin</artifactId>
				<version>1.5.0.1</version>
				<configuration>
					<unpack>true</unpack>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>7.0.0.Final</version>
				<configuration>
					<hostname>localhost</hostname>
					<port>9999</port>
					<filename>${project.build.finalName}.war</filename>
				</configuration>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											build-helper-maven-plugin
										</artifactId>
										<versionRange>
											[1.5,)
										</versionRange>
										<goals>
											<goal>add-source</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
    <profiles>
	<profile>
		<id>dev</id>
		<activation>
			<activeByDefault>true</activeByDefault>
		</activation>
		<properties>
			<debug>true</debug>
		</properties>
	</profile>
	<profile>
		<id>prod</id>
		<activation>
			<property>
				<name>environment</name>
				<value>prod</value>
			</property>
		</activation>
		<properties>
			<debug>false</debug>
		</properties>
	</profile>
      <profile>
        <!-- Kjør integrasjonstester slik
         mvn -PITest integration-test -Dwebdriver.client=firefox -Dbase_url=http://localhost:8080/epn/
         client kan være også IE,chrome default er htmlUnit  
         -->
        <id>ITest</id>
        <build>
          <plugins>
           <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                  <skipTests>true</skipTests>
                </configuration>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-failsafe-plugin</artifactId>
              <version>2.14</version>
              <executions>
                <execution>
                  <id>failsafe-integration-tests</id>
                  <phase>integration-test</phase>
                  <goals>
                    <goal>integration-test</goal>
                  </goals>
                  <configuration>
                    <encoding>UTF-8</encoding>
                    <skip>false</skip>
                    <includes>
                      <include>**/*IntegrationTest.java</include>
                    </includes>
                    <excludes>
                      <exclude>**/*UnitTest.java</exclude>
                    </excludes>
                  </configuration>
                </execution>
                <execution>
                  <id>failsafe-verify</id>
                  <phase>verify</phase>
                  <goals>
                    <goal>verify</goal>
                  </goals>
                </execution>
              </executions>
            </plugin>
      
          </plugins>
        </build>
      </profile>
    </profiles>
</project>
